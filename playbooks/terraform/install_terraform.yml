#--------------------------------------------------------------------
# Script to Install Terraform
# Tested on:
#           Ubuntu 24.04,
#           Fedora 40
# Developed by Andrey Dubovsky
# Example:
#
# ansible-playbook -i inventory.ini install_terraform.yml --ask-become-pass
#
#--------------------------------------------------------------------

---
- name: Install Terraform on Fedora 40 and Ubuntu 24.04
  hosts: all
  become: yes

  tasks:
    # Fedora 40 specific tasks
    - name: Install dependencies on Fedora 40
      ansible.builtin.dnf:
        name:
          - wget
          - gnupg2
        state: present
        update_cache: yes
      when:
        - ansible_distribution == "Fedora"
        - ansible_distribution_version == "40"

    - name: Add HashiCorp GPG key on Fedora 40
      ansible.builtin.command:
        cmd: "rpm --import https://rpm.releases.hashicorp.com/gpg"
      when:
        - ansible_distribution == "Fedora"
        - ansible_distribution_version == "40"

    - name: Add HashiCorp repository on Fedora 40
      ansible.builtin.yum_repository:
        name: hashicorp
        description: "HashiCorp Stable - $basearch"
        baseurl: https://rpm.releases.hashicorp.com/fedora/$releasever/$basearch/stable
        gpgkey: https://rpm.releases.hashicorp.com/gpg
        enabled: yes
      when:
        - ansible_distribution == "Fedora"
        - ansible_distribution_version == "40"

    - name: Install Terraform on Fedora 40
      ansible.builtin.dnf:
        name: terraform
        state: present
        update_cache: yes
      when:
        - ansible_distribution == "Fedora"
        - ansible_distribution_version == "40"

    # Ubuntu 24.04 specific tasks
    - name: Install dependencies on Ubuntu 24.04
      ansible.builtin.apt:
        name:
          - wget
          - gnupg
          - software-properties-common
        state: present
        update_cache: yes
      when:
        - ansible_distribution == "Ubuntu"
        - ansible_distribution_version == "24.04"

    - name: Add HashiCorp GPG key on Ubuntu 24.04
      ansible.builtin.shell:
        cmd: "wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg > /dev/null"
      when:
        - ansible_distribution == "Ubuntu"
        - ansible_distribution_version == "24.04"

    - name: Add HashiCorp repository on Ubuntu 24.04
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com {{ ansible_lsb.codename }} main"
      when:
        - ansible_distribution == "Ubuntu"
        - ansible_distribution_version == "24.04"

    - name: Update apt repositories on Ubuntu 24.04
      ansible.builtin.apt:
        update_cache: yes
      when:
        - ansible_distribution == "Ubuntu"
        - ansible_distribution_version == "24.04"

    - name: Install Terraform on Ubuntu 24.04
      ansible.builtin.apt:
        name: terraform
        state: present
        update_cache: yes
      when:
        - ansible_distribution == "Ubuntu"
        - ansible_distribution_version == "24.04"

    # Check if Terraform autocomplete is already installed
    - name: Check if Terraform autocomplete is already installed
      ansible.builtin.shell:
        cmd: "grep 'complete -C /usr/bin/terraform terraform' ~/.bashrc"
      register: autocomplete_installed
      ignore_errors: true
      when:
        - ansible_distribution == "Fedora"
        - ansible_distribution_version == "40"

    - name: Configure Terraform autocomplete
      ansible.builtin.command:
        cmd: "terraform -install-autocomplete"
      when:
        - (ansible_distribution == "Fedora" and ansible_distribution_version == "40") and autocomplete_installed.rc != 0
      ignore_errors: yes  # Ignore errors since autocomplete might already be configured

    # Common tasks for both Fedora 40 and Ubuntu 24.04
    - name: Verify Terraform installation
      ansible.builtin.command:
        cmd: "terraform --version"
      register: terraform_version
      when:
        - (ansible_distribution == "Fedora" and ansible_distribution_version == "40") or
          (ansible_distribution == "Ubuntu" and ansible_distribution_version == "24.04")

    - name: Display Terraform version
      ansible.builtin.debug:
        msg: "Terraform version installed: {{ terraform_version.stdout }}"
      when:
        - terraform_version is defined
